@model IEnumerable<Contract_Monthly_Claim_System_Part2.Models.Claim>
@{
    ViewData["Title"] = "My Claims";
}

<h2 class="mb-4 text-gradient"><i class="fa fa-clipboard-list me-2"></i>CLAIM VIEW PAGE: FOR ALL LECTURERS</h2>

<div class="row g-4">
    @foreach (var claim in Model)
    {
        <div class="col-md-6 col-lg-4">
            <div class="card p-3 h-100 shadow-sm claim-card">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="card-title mb-0"><i class="fa fa-hashtag me-1"></i>Claim #@claim.ClaimID</h5>

                    @{
                        var badgeClass = claim.Status switch
                        {
                            ClaimStatus.Pending => "bg-secondary",
                            ClaimStatus.CoordinatorApproved => "bg-info",
                            ClaimStatus.ManagerApproved => "bg-success",
                            ClaimStatus.Rejected => "bg-danger",
                            _ => "bg-secondary"
                        };

                        var badgeText = claim.Status switch
                        {
                            ClaimStatus.Pending => "Pending",
                            ClaimStatus.CoordinatorApproved => "Waiting for Manager Approval",
                            ClaimStatus.ManagerApproved => "Claim Fully Approved",
                            ClaimStatus.Rejected => "Rejected",
                            _ => "Unknown"
                        };

                        var progressClass = claim.Status switch
                        {
                            ClaimStatus.Pending => "bg-secondary",
                            ClaimStatus.CoordinatorApproved => "bg-info",
                            ClaimStatus.ManagerApproved => "bg-success",
                            ClaimStatus.Rejected => "bg-danger",
                            _ => "bg-secondary"
                        };

                        var progressValue = claim.Status switch
                        {
                            ClaimStatus.Pending => 25,
                            ClaimStatus.CoordinatorApproved => 50,
                            ClaimStatus.ManagerApproved => 100,
                            ClaimStatus.Rejected => 100,
                            _ => 0
                        };
                    }

                    <span class="badge px-2 py-1 @badgeClass">
                        <i class="fa fa-circle me-1"></i>@badgeText
                    </span>
                </div>

                <p><strong>Lecturer:</strong> @claim.LecturerName</p>
                <p class="mb-1"><i class="fa fa-clock me-1"></i><strong>Hours Worked:</strong> @claim.HoursWorked</p>
                <p class="mb-1"><i class="fa fa-money-bill-wave me-1"></i><strong>Hourly Rate:</strong> @(claim.HourlyRate.ToString("C"))</p>
                <p class="mb-1"><i class="fa fa-calculator me-1"></i><strong>Total:</strong> @((claim.HoursWorked * claim.HourlyRate).ToString("C"))</p>

                @if (!string.IsNullOrEmpty(claim.Notes))
                {
                    <p class="mb-1"><i class="fa fa-sticky-note me-1"></i><strong>Notes:</strong> @claim.Notes</p>
                }

                <p class="mb-2"><small class="text-muted"><i class="fa fa-calendar-alt me-1"></i>Submitted: @claim.SubmissionDate.ToShortDateString()</small></p>

                
                <div class="progress mb-3" style="height: 8px; border-radius: 10px;">
                    <div class="progress-bar @progressClass progress-bar-gradient" role="progressbar" style="width: @progressValue%"></div>
                </div>

                
                @if (claim.Documents != null && claim.Documents.Any())
                {
                    <p class="mb-2"><strong>Documents:</strong></p>
                    <ul class="list-unstyled">
                        @foreach (var doc in claim.Documents)
                        {
                            <li>
                                <a class="btn btn-sm btn-outline-primary mb-1 d-flex align-items-center justify-content-center download-btn" asp-action="Download" asp-route-id="@doc.SupportingDocumentID">
                                    <i class="fa fa-download me-1"></i> @doc.FileName
                                </a>
                            </li>
                        }
                    </ul>
                }

                
                @if (claim.Status == ClaimStatus.Pending)
                {
                    <div class="d-flex justify-content-end mt-3">
                        <form asp-action="Delete" asp-route-id="@claim.ClaimID" method="post" onsubmit="return confirm('Are you sure you want to delete this claim?');">
                            <button type="submit" class="btn btn-outline-danger btn-sm d-flex align-items-center">
                                <i class="fa fa-trash me-1"></i> Delete
                            </button>
                        </form>
                    </div>
                }
            </div>
        </div>
    }
</div>

<style>
    body {
        background: linear-gradient(135deg, #f3f7fd, #e6edf7);
    }

    .text-gradient {
        background: linear-gradient(45deg, #007bff, #6610f2);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .claim-card {
        border-radius: 1rem;
        background: rgba(255, 255, 255, 0.97);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        cursor: pointer;
    }

        .claim-card:hover {
            transform: translateY(-6px);
            box-shadow: 0 12px 28px rgba(0,0,0,0.18);
        }

    .progress-bar-gradient {
        transition: all 0.3s ease;
    }

    .download-btn {
        transition: all 0.2s ease-in-out;
    }

        .download-btn:hover {
            background-color: #4e73df;
            color: white;
        }

    form button.btn-outline-danger {
        transition: all 0.25s ease;
    }

        form button.btn-outline-danger:hover {
            background-color: #dc3545;
            color: white;
        }
</style>

